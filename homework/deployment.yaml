# mysql-master-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-master
  namespace: foo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-master
  template:
    metadata:
      labels:
        app: mysql-master
    spec:
      containers:
      - name: mysql
        image: mysql:8.0
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "password"
        - name: MYSQL_DATABASE
          value: "test_db"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-slave
  namespace: foo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-slave
  template:
    metadata:
      labels:
        app: mysql-slave
    spec:
      containers:
      - name: mysql
        image: mysql:8.0 # Or your desired MySQL version
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "password" # Should match master password
        - name: MYSQL_REPLICATION_MODE
          value: "slave"
        - name: MYSQL_MASTER_HOST
          value: "mysql-master" # Service name of the master
        - name: MYSQL_MASTER_ROOT_PASSWORD
          value: "password" # Should match master password
        ports:
        - containerPort: 3306
        volumeMounts: # Only if you need persistence
        - name: mysql-data
          mountPath: /var/lib/mysql
      volumes: # Only if you need persistence
      - name: mysql-data
        emptyDir: {} # Or use a PersistentVolumeClaim

---
# writer-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: writer
  namespace: foo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: writer
  template:
    metadata:
      labels:
        app: writer
    spec:
      containers:
      - name: writer
        image: purshottam72/writer:001
        ports:
        - containerPort: 8000  # Prometheus metrics

---
# reader-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reader
  namespace: foo
spec:
  replicas: 3
  selector:
    matchLabels:
      app: reader
  template:
    metadata:
      labels:
        app: reader
    spec:
      containers:
      - name: reader
        image: purshottam72/reader:001
        ports:
        - containerPort: 5000  # API
        - containerPort: 8000  # Prometheus metrics
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name

---
# reader-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: reader-service
  namespace: foo
spec:
  selector:
    app: reader
  ports:
  - port: 80
    targetPort: 5000
  type: ClusterIP

---
# ingress.yaml (optional)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: reader-ingress
  namespace: foo
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: reader-service
            port:
              number: 80
